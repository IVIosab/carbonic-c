type int is integer;
type double is real;
type bool is boolean;

routine routineWithParametersAndType (parameter1 is integer) : integer is 
    //variable declarations with initial value
    var integerWithInitialValue : integer is 1;
    var realWithInitialValue : real is 1.1;
    var booleanWithInitialValue : boolean is true;
    var intWithInitialValue : int is 2;
    var doubleWithInitialValue : double is 2.2;
    var boolWithInitialValue : bool is false;
    
    return 1;
end

routine routineWithParamter (parameter2 is integer) is
    //variable declarations without initial value
    var integerWithInitialValue : integer;
    var realWithInitialValue : real;
    var booleanWithInitialValue : boolean;
    var intWithInitialValue : int;
    var doubleWithInitialValue : double;
    var boolWithInitialValue : bool;

    var nestedRoutineCall : routineWithoutAnything();

    return 2;
end

routine routineWithoutAnything () is 
    var inferredInteger is 3;
    var inferredReal is 3.3;
    var inferredBoolean is true;

    var arrayVar : array [3] integer;
    var recordVar : record 
        var a : integer is 0;
        var b : integer is 1;
    end;

    return 3;
end

routine main () : integer is
    var returnedValue1 : routineWithParametersAndType(1) is integer;
    var returnedValue2 : routineWithParamter(2);
    
    return 0;
end


x[5].recordParameter
x.recordParameter[5][6]
if (x > 5) then
    print (x);
end

if (x < 6 and (6 > 9) ) then
    print(x);
else 
   print(x);
end 
while i > 0 loop
        print(i);
end
for i in 0 .. 3 loop
        print(i);
    end

for i in reverse 0 .. 3 loop
    print(i);
end
foreach i from x loop
        print(i);
    end

var rc : integer is x(5); 
